// Code generated by MockGen. DO NOT EDIT.
// Source: dir_account_store.go

// Package network is a generated GoMock package.
package network

import (
	gomock "github.com/golang/mock/gomock"
	jwt "github.com/nats-io/jwt"
	server "github.com/nats-io/nats-server/v2/server"
	reflect "reflect"
)

// MockaccountNotificationReceiver is a mock of accountNotificationReceiver interface
type MockaccountNotificationReceiver struct {
	ctrl     *gomock.Controller
	recorder *MockaccountNotificationReceiverMockRecorder
}

// MockaccountNotificationReceiverMockRecorder is the mock recorder for MockaccountNotificationReceiver
type MockaccountNotificationReceiverMockRecorder struct {
	mock *MockaccountNotificationReceiver
}

// NewMockaccountNotificationReceiver creates a new mock instance
func NewMockaccountNotificationReceiver(ctrl *gomock.Controller) *MockaccountNotificationReceiver {
	mock := &MockaccountNotificationReceiver{ctrl: ctrl}
	mock.recorder = &MockaccountNotificationReceiverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockaccountNotificationReceiver) EXPECT() *MockaccountNotificationReceiverMockRecorder {
	return m.recorder
}

// LookupAccount mocks base method
func (m *MockaccountNotificationReceiver) LookupAccount(name string) (*server.Account, error) {
	ret := m.ctrl.Call(m, "LookupAccount", name)
	ret0, _ := ret[0].(*server.Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LookupAccount indicates an expected call of LookupAccount
func (mr *MockaccountNotificationReceiverMockRecorder) LookupAccount(name interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LookupAccount", reflect.TypeOf((*MockaccountNotificationReceiver)(nil).LookupAccount), name)
}

// UpdateAccountClaims mocks base method
func (m *MockaccountNotificationReceiver) UpdateAccountClaims(a *server.Account, ac *jwt.AccountClaims) {
	m.ctrl.Call(m, "UpdateAccountClaims", a, ac)
}

// UpdateAccountClaims indicates an expected call of UpdateAccountClaims
func (mr *MockaccountNotificationReceiverMockRecorder) UpdateAccountClaims(a, ac interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAccountClaims", reflect.TypeOf((*MockaccountNotificationReceiver)(nil).UpdateAccountClaims), a, ac)
}
